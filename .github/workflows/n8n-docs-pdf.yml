      # نصب پیش‌نیازهای کرومیوم (برای اطمینان)
      - name: Install Chromium runtime deps
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libnss3 libxss1 libasound2 libatk-bridge2.0-0 libcups2 \
            libx11-xcb1 libxcomposite1 libxdamage1 libxrandr2 libgbm1 \
            libpango-1.0-0 libpangocairo-1.0-0 fonts-liberation

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install md-to-pdf and puppeteer
        run: |
          npm i -g md-to-pdf
          npm i puppeteer

      # مرحله ۱: خروجی HTML بساز (بدون کرومیوم، سریع و پایدار)
      - name: Generate HTML (no browser)
        run: |
          md-to-pdf n8n-docs.md --basedir . --as-html

      # مرحله ۲: رندر HTML به PDF با Puppeteer (بدون سندباکس + بدون تایم‌اوت)
      - name: Render HTML to PDF with Puppeteer
        run: |
          cat > render.js <<'JS'
          const fs = require('fs');
          const path = require('path');
          const puppeteer = require('puppeteer');

          (async () => {
            const htmlPath = path.resolve('n8n-docs.html');
            let html = fs.readFileSync(htmlPath, 'utf8');

            // base برای حل مسیرهای نسبی تصاویر/استایل‌ها
            if (!/<base\s/i.test(html)) {
              const baseHref = 'file://' + process.cwd() + '/';
              html = html.replace(/<head>/i, `<head><base href="${baseHref}">`);
            }

            const browser = await puppeteer.launch({
              args: ['--no-sandbox', '--disable-setuid-sandbox'],
              headless: 'new'
            });

            const page = await browser.newPage();
            page.setDefaultNavigationTimeout(0);
            page.setDefaultTimeout(0);

            await page.setContent(html, { waitUntil: 'load', timeout: 0 });

            // صبر تا همه تصاویر لود شوند (جلوگیری از صفحه سفید/نیمه‌کاره)
            await page.evaluate(async () => {
              await Promise.all(Array.from(document.images).map(img => {
                if (img.complete) return;
                return new Promise(res => {
                  img.addEventListener('load', res, { once: true });
                  img.addEventListener('error', res, { once: true });
                });
              }));
            });

            await page.emulateMediaType('screen');
            await page.pdf({
              path: 'n8n-docs.pdf',
              format: 'A4',
              printBackground: true,
              margin: { top: '20mm', right: '15mm', bottom: '20mm', left: '15mm' }
            });

            await browser.close();
          })().catch(err => { console.error(err); process.exit(1); });
          JS
          node render.js

      - name: Upload PDF artifact
        uses: actions/upload-artifact@v4
        with:
          name: n8n-documentation-unofficial
          path: n8n-docs.pdf
          if-no-files-found: error
